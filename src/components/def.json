{
  "openapi": "3.0.1",
  "info": {
    "title": "Bimeta API",
    "description": "The BIMeta API provides the meta data of BIMeta fpr developers. With the help of the API, developers can easily integrate this metadata into their own applications. The content of BIMeta is owned and licensed by the publishing organizations.",
    "termsOfService": "https://www.bimeta.de/datenschutz",
    "contact": {
      "name": "Bimeta Steuerkreis",
      "url": "https://www.bimeta.de",
      "email": "info@bimeta.de"
    },
    "license": {
      "name": "BIMeta License",
      "url": "https://www.bimeta.de"
    },
    "version": "0.1"
  },
  "servers": [
    {
      "url": "https://bimeta-dev-api.azurewebsites.net",
      "description": "Stage DEV(only for developers!), Raw development, can be down!"
    },
    {
      "url": "https://bimeta-test-api.azurewebsites.net",
      "description": "Stage TEST (only for developers!), Integrationstests here, can be down"
    },
    {
      "url": "https://bimeta-prod-api.azurewebsites.net",
      "description": "Stage Production with the real data; only here the is data reliable"
    }
  ],
  "paths": {
    "/api/v0.1/audit/{id}/audits": {
      "get": {
        "tags": [
          "audits"
        ],
        "summary": "Retrieve the audit history of a property by its Id",
        "description": "Every change in BIMeta is logged in the audit history according to EN ISO 23386 to ensure the tracebility of the property meta data",
        "operationId": "GetAuditsByClassProp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Audits data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Audit"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Audit"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Audit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/auth": {
      "post": {
        "tags": [
          "administration"
        ],
        "summary": "Request an access token for a user and his rules to view/edit  ressources of the API",
        "description": "Requesting a token for a user depends on his username/password.",
        "operationId": "GetUserToken",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Api.Server.Authorization.Credential"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Api.Server.Authorization.Credential"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Api.Server.Authorization.Credential"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Api.Server.Authorization.Credential"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Api.Server.Model.AuthToken"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Api.Server.Model.AuthToken"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Api.Server.Model.AuthToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{id}": {
      "get": {
        "tags": [
          "classes"
        ],
        "summary": "Get one single class by its Id",
        "description": "Every class one Id, which is an unique identifier (UUID). Retrieve the class by this unique identifier.",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{csId}/top": {
      "get": {
        "tags": [
          "classificiationsystems",
          "classes"
        ],
        "summary": "Get all root (top) classes of a classification system by the Id of the classifiaction system (csId)",
        "description": "Every classification systems can have many classes, that are grouped into versions. This resource retrieves all root classes, regardless of the version, they belong to.",
        "operationId": "GetTopClasses",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the classes is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classificationssystemId}/classesreadytopublish": {
      "get": {
        "tags": [
          "classificiationsystems",
          "classes"
        ],
        "summary": "Get all root (top) classes of a classification system by the Id of the classifiaction system (csId)",
        "description": "Every classification systems can have many ready to publish classes, that are grouped into versions. This resource retrieves all root ready to publish classes, regardless of the version, they belong to.",
        "operationId": "GetReadyToPublishClasses",
        "parameters": [
          {
            "name": "classificationssystemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the ready to publish classes is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{csId}/{vId}/versionedclasses": {
      "get": {
        "tags": [
          "classificiationsystems",
          "classes"
        ],
        "summary": "Get all  classes of a classification system by the Id of the classifiaction system (csId) and the version (vId}",
        "description": "Every classification systems can have many classes, that are grouped into  versions. This resource retrieves all root classes, filterd by the  version date so it gets all versions less than or equal current version.",
        "operationId": "GetClassesByClassificationSystemAndVersion",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "vId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the classes is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{csId}/{vId}/classes": {
      "get": {
        "tags": [
          "classificiationsystems",
          "classes"
        ],
        "summary": "Get all root (top) classes of a classification system by the Id of the classifiaction system (csId) and the domain version (vId}",
        "description": "Every classification systems can have many classes, that are grouped into domain versions. This resource retrieves all root classes, filterd by the domain version, they belong to.",
        "operationId": "GetTopClassesByDomainVersion",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "vId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the classes is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{id}/children": {
      "get": {
        "tags": [
          "classes"
        ],
        "summary": "Get all sub classes of a class (id)",
        "description": "Classes, that are not root classes are alwaye tight to their parent class. This ressource retrieved all sub classes for a given class. If the given class has no sub classes, the ressource will deliver null.",
        "operationId": "GetChildren",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{id}/{vId}/children": {
      "get": {
        "tags": [
          "classes"
        ],
        "summary": "Get all sub classes of a class (id), that belong to a specified domain version (vId)",
        "description": "Classes, that are not root classes are alwaye tight to their parent class (Id) that belong to the given domain version (vId). This ressource retrieved all sub classes for a given class. If the given class has no sub classes, the ressource will deliver null.",
        "operationId": "GetChildrenByDomainVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "vId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{versionId}/classes": {
      "get": {
        "tags": [
          "classes"
        ],
        "summary": "Get all classes that belong to a specified  classifiaction system version (versionId)",
        "description": "Classes that belong to the given classifiaction system version (csvId). This ressource retrieved all classes for a given version.",
        "operationId": "GetClassesByCSVersion",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{versionId}/classtoproperties": {
      "get": {
        "tags": [
          "classestoproperties"
        ],
        "summary": "Get all classes2Properties that belong to a specified  classifiaction system version (versionId)",
        "description": "classestoproperties that belong to the given classifiaction system version (csvId). This ressource retrieved all classestoproperties for a given version.",
        "operationId": "GetC2PByCSVersion",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Classes2Property data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}/c2preadytopublish": {
      "get": {
        "tags": [
          "classestoproperties"
        ],
        "summary": "Get all classes2Properties that belong to a specified  classifiaction system version (versionId)",
        "description": "classestoproperties that belong to the given classifiaction system version (csvId). This ressource retrieved all classestoproperties for a given version.",
        "operationId": "GetReadyToPublishClassesToProperties",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Classes2Property data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes": {
      "post": {
        "tags": [
          "classes"
        ],
        "summary": "Insert or update a class definition (Upsert)",
        "description": "This ressource receives a class object. If the class already exists, the class is updated, otherwise the (new) class is inserted into BIMeta.",
        "operationId": "UpsertClass",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The class data is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/updatebulkclasses": {
      "post": {
        "tags": [
          "classes"
        ],
        "summary": "update workflow status and versions for a list of classes",
        "description": "update workflow status and versions for a list of classes.",
        "operationId": "UpdateBulkClasses",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Bulk Classes.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}/properties": {
      "post": {
        "tags": [
          "classes"
        ],
        "summary": "Insert or update a relation of a proptery to a class (Upsert)",
        "description": "This ressource receives an object with a relation of a property to a class. If the relation already exists, the relation is updated, otherwise the (new) relation is inserted into BIMeta.",
        "operationId": "UpsertProperty",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The property is assigned to the class.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "classes",
          "properties"
        ],
        "summary": "Get all property definitions, that are attached to this class (Id)",
        "description": "A property definition can be attached to many classes. This ressource retrieves the property definitions, that are attached to the given class (Id).",
        "operationId": "GetPropertiesByClass",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}/classestoproperties": {
      "get": {
        "tags": [
          "classes",
          "properties"
        ],
        "summary": "Get all class to property definitions, that are attached to this class (Id)",
        "description": "A property definition can be attached to many classes. This ressource retrieves the class to property definitions, that are attached to the given class (Id).",
        "operationId": "GetClassesToPropertiesByClass",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The classes to properties data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}/{versionId}/properties": {
      "get": {
        "tags": [
          "classes",
          "properties"
        ],
        "summary": "Get all property definitions beloning to a specified domain version(versionId), that are attached to this class (Id)",
        "description": "A property definition can be attached to many classes. This ressource retrieves the property definitions, that are attached to the given class (Id) in the specified doman version (versionId).",
        "operationId": "GetPropertiesByClassByDomainVersion",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}": {
      "delete": {
        "tags": [
          "classes"
        ],
        "summary": "Delete a class by its Id",
        "description": "The class is deleted, if the class does exist and it has no references, that prevent the deletion",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Class deleted successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}/relationclasses": {
      "get": {
        "tags": [
          "mappings"
        ],
        "summary": "Retrieve all mapping of a class to other classes by it Id",
        "description": "Every class in BIMeta can have mappings to other classes. The other classes can be in the same domain, or in other domains. All mappings are owned by the classes domain. The mappings have qualified information about the nature of the mapping.",
        "operationId": "GetRelationClasses",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class mappings are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/relationclass": {
      "post": {
        "tags": [
          "mappings"
        ],
        "summary": "Insert or update a mapping of a class (Upsert)",
        "description": "This ressource receives an object with a mapping of a class. If the mapping already exists, the mapping is updated, otherwise the (new) mapping is inserted into BIMeta.",
        "operationId": "UpsertRelationClass",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The class mapping is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/classestoproperties": {
      "post": {
        "tags": [
          "classestoproperties"
        ],
        "summary": "Update the class to properties definitions for the desired class",
        "description": "This ressource upserts the list of classes to properties definitions. Since classes to properties definitions are there and updated in classes page, updates are introduced into BIMeta.",
        "operationId": "UpsertClassesToProperties",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The class to properties list is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/updatebulkclassestoproperties": {
      "post": {
        "tags": [
          "classes"
        ],
        "summary": "update workflow status and versions for a list of classestoproperties",
        "description": "update workflow status and versions for a list of classestoproperties.",
        "operationId": "UpdateBulkClassesToProperties",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Bulk ClassesToProperties.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classes/{classId}/inheritedproperties": {
      "get": {
        "tags": [
          "inheritedproperties"
        ],
        "summary": "Get the inherited properties for the desired class",
        "description": "This ressource gets the inherited properties of the selected class from BIMeta db.",
        "operationId": "GetInheritedProperties",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inherited properties are retrieved.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystems": {
      "get": {
        "tags": [
          "classificiationsystems"
        ],
        "summary": "Retrieve all classification systems",
        "description": "Every class and property definition is part of a classification system. The data of all classification systems can be retrieved in this ressource.",
        "operationId": "GetClassificationSystems",
        "responses": {
          "200": {
            "description": "The list of classificationsystems is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystems/{csId}/properties": {
      "get": {
        "tags": [
          "classificiationsystems",
          "properties"
        ],
        "summary": "Retrieve the classification system by its Id",
        "description": "Every class and property definition is part of a classification system. The data of the Properties can be retrieved in this ressource.",
        "operationId": "GetPropertiesByCS",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The classificationsystem is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Dto.PropertyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Dto.PropertyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Dto.PropertyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystems/{csId}/{vId}/versionedproperties": {
      "get": {
        "tags": [
          "classificiationsystems",
          "properties"
        ],
        "summary": "Get all  properties of a classification system by the Id of the classifiaction system (csId) and the version (vId}",
        "description": "Every classification systems can have many properties, that are grouped into  versions. This resource retrieves all root properties, filterd by the  version date so it gets all versions less than or equal current version.",
        "operationId": "GetPropertiesByClassificationSystemAndVersion",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "vId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the Properties is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystems/{csId}/enumerations": {
      "get": {
        "tags": [
          "classificiationsystems"
        ],
        "summary": "Retrieve the enumerations by CS Id",
        "description": "Retrieve the enumeration  by CS Id.",
        "operationId": "GetEnumsByCSId",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The propertyEnumerations is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystemsversion/{csId}/versions": {
      "get": {
        "tags": [
          "classificationsystemversion"
        ],
        "summary": "Retrieve all versions of a classification system by its id",
        "description": "",
        "operationId": "GetClassificationSystemVersions",
        "parameters": [
          {
            "name": "csId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of versions of a classificationsystem is availabe.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystemsversion/csversion/{vId}": {
      "get": {
        "tags": [
          "classificationsystemversion"
        ],
        "summary": "Get one single classification system version by its Id (vId)",
        "description": "",
        "operationId": "GetCSVersion",
        "parameters": [
          {
            "name": "vId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The cs version data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystemsversion": {
      "post": {
        "tags": [
          "classificationsystemversion"
        ],
        "summary": "Insert or update a ClassificationSystemVersion (Upsert)",
        "description": "This ressource receives a ClassificationSystemVersion object. If the ClassificationSystemVersion already exists, the ClassificationSystemVersion is updated, otherwise the (new) ClassificationSystemVersion is inserted into BIMeta.",
        "operationId": "UpsertClassificationSystemVersion",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The classificationsystemversion data is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystemsversion/insertdefaultversion": {
      "post": {
        "tags": [
          "classificationsystemversion"
        ],
        "summary": "Inserting default version for all classification systems/classes/properties/c2ps ",
        "description": "Inserting a default version for all existed classes, properties and classificationsystems that exisited before february 2022, IT CAN TAKE MORE THAN 5 MINUTES. ",
        "operationId": "InsertDefaultVersionDataIntoDB",
        "responses": {
          "200": {
            "description": "The defaultversion data is inserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/classificationsystemsversion/{csvId}": {
      "delete": {
        "tags": [
          "classificationsystemversion"
        ],
        "summary": "Delete a ClassificationSystemVersion by its Id",
        "description": "The ClassificationSystemVersion is deleted, if the ClassificationSystemVersion does exist and it has no references, that prevent the deletion",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "csvId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ClassificationSystemVersion deleted successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Retrieve all available domains",
        "description": "Any domain can provide the classes and properties. All versions can be retrieved here.",
        "operationId": "GetDomains",
        "responses": {
          "200": {
            "description": "The domains are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/domains/{id}": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Retrieve a domain by its Id",
        "description": "Any domain can provide the classes and properties.",
        "operationId": "GetDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The domains are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/domains/versions/{vId}": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get one single domain version by its Id (vId)",
        "description": "Any domain can provide the classes and properties in different versions, e.g. 'CAFM-Connect 2014', 'CAFM-Connect 2016' and so forth. Retrieve the domain version by this unique identifier (id).",
        "operationId": "GetDomainVersion",
        "parameters": [
          {
            "name": "vId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The domain version data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/domains/{domainId}/versions": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Retrieve all available versions of all domains",
        "description": "Any domain can provide the classes and properties in different versions, e.g. 'CAFM-Connect 2014', 'CAFM-Connect 2016' and so forth. The defined versions can be retrieved here.",
        "operationId": "GetDomainVersions",
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The domain versions are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/profiles": {
      "get": {
        "tags": [
          "BIM profiles"
        ],
        "summary": "Retrieve the list of BIM profiles",
        "description": "A BIM profile is a digital representation of an information exchange requirement. BIM profiles are related to use cases. Every profile contains severall class definitions and property definitions, that are needed to process the use case in a digital manner. A BIM profile can me made up out of every class and property definition, that are maintained within BIMeta, regardless to which domain they belong to. This ressource delivers a list of all BIM profiles, that are maintained in BIMeta.",
        "operationId": "GetBimProfiles",
        "responses": {
          "200": {
            "description": "The list of BIM profiles is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/{id}": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Get propery definition by its Id",
        "description": "Every property definition contains a lot of meta data according to EN ISO 23386, that defines the usage of the property. In this ressource, the definition of a property can be retrieved by its Id (Guid).",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The property definition is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/{versionId}/properties": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Get all properties that belong to a specified  classifiaction system version (versionId)",
        "description": "properties that belong to the given classifiaction system version (csvId). This ressource retrieved all properties for a given version.",
        "operationId": "GetPropertiesByCSVersion",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/{classificationssystemId}/propertiesreadytopublish": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Get all properties that belong to a specified  classifiaction system version (versionId)",
        "description": "properties that belong to the given classifiaction system version (csvId). This ressource retrieved all properties for a given version.",
        "operationId": "GetReadyToPublishProperties",
        "parameters": [
          {
            "name": "classificationssystemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties": {
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "Insert or update a property definition (Upsert)",
        "description": "This ressource receives an object with a property definition. If the property definition already exists, the property definition is updated, otherwise the (new) property definition is inserted into BIMeta.",
        "operationId": "UpsertProperty",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The property definition is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/updatebulkproperties": {
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "update workflow status and versions for a list of properties",
        "description": "update workflow status and versions for a list of properties.",
        "operationId": "UpdateBulkProperties",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Bulk Properties.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/{propertyId}/relationproperties": {
      "get": {
        "tags": [
          "mappings"
        ],
        "summary": "Retrieve all mapping of a property to other properties by it Id",
        "description": "Every property in BIMeta can have mappings to other properties. The other properties can be in the same domain, or in other domains. All mappings are owned by the domain of the property. The mappings have qualified information about the nature of the mapping.",
        "operationId": "GetRelationProperties",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The property data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/relationproperty": {
      "post": {
        "tags": [
          "mappings"
        ],
        "summary": "Insert or update a mapping of a property (Upsert)",
        "description": "This ressource receives an object with a mapping of a property. If the mapping already exists, the mapping is updated, otherwise the (new) mapping is inserted into BIMeta.",
        "operationId": "UpsertRelationProperty",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The property relation is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/properties/{propertyId}/enumerations": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Retrieve the enumerations by property Id",
        "description": "Retrieve the enumeration  by property Id.",
        "operationId": "GetEnumsBypropId",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The propertyEnumerations is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/propertyenumeration/{id}": {
      "get": {
        "tags": [
          "propertyEnumerations"
        ],
        "summary": "Get propertyEnumeration definition by its Id",
        "description": "the definition of a propertyEnumerationcan be retrieved by its Id (Guid).",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The propertyEnumeration is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/propertyenumeration": {
      "post": {
        "tags": [
          "propertyEnumerations"
        ],
        "summary": "Insert or update a propertyEnumeration (Upsert)",
        "description": "This ressource receives an object with a propertyEnumeration. If the propertyEnumeration already exists, the propertyEnumeration is updated, otherwise the (new) propertyEnumeration is inserted into BIMeta.",
        "operationId": "UpsertPropertyEnumeration",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The propertyEnumeration is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/propertyenumeration/{enumId}/enumerationvalues": {
      "get": {
        "tags": [
          "propertyEnumerations"
        ],
        "summary": "Retrieve the enumeration values by enumeration Id",
        "description": "Retrieve the enumeration values by enumeration Id.",
        "operationId": "GetEnumValuesByEnumId",
        "parameters": [
          {
            "name": "enumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The propertyEnumerationValues is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/propertyenumerationvalues/{id}": {
      "get": {
        "tags": [
          "propertyEnumerationValues"
        ],
        "summary": "Get propertyEnumerationValues definition by its Id",
        "description": "the definition of a propertyEnumerationValues can be retrieved by its Id (Guid).",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The propertyEnumerationValues is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/propertyenumerationvalues": {
      "post": {
        "tags": [
          "propertyEnumerationValues"
        ],
        "summary": "Insert or update a propertyEnumerationValue (Upsert)",
        "description": "This ressource receives an object with a propertyEnumerationValue. If the propertyEnumerationValue already exists, the propertyEnumerationValue is updated, otherwise the (new) propertyEnumerationValue is inserted into BIMeta.",
        "operationId": "UpsertpropertyEnumerationValue",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The propertyEnumerationValue is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/propertytypes": {
      "get": {
        "tags": [
          "measures and units"
        ],
        "summary": "Retrieve all available measure types and their units as a structure",
        "description": "Every property definition has a measures type, that defines the data, that ca be story in the property. BIMeta uses at minimum the measure types, defined by EN ISO 16739. Every measure type can have many unit types. The unit types follwow the prEN 16749-1. Those measure types and unit type, that are not included in the named standard, are added directly in BIMeta.",
        "operationId": "GetPropertyTypes",
        "responses": {
          "200": {
            "description": "The property types are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/publishers": {
      "get": {
        "tags": [
          "publisher"
        ],
        "summary": "put summary here",
        "description": "put description here",
        "operationId": "GetAllPublishers",
        "responses": {
          "200": {
            "description": "The publisher data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/publishers/writable": {
      "get": {
        "tags": [
          "publisher"
        ],
        "summary": "put summary here",
        "description": "put description here",
        "operationId": "GetAllWritablePublishers",
        "responses": {
          "200": {
            "description": "The publisher data are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/publishers/{publisherId}/domains": {
      "get": {
        "tags": [
          "publisher",
          "domains"
        ],
        "summary": "Retrieve domains of the publisher.",
        "description": "Domains of the publisher.",
        "operationId": "GetPublisherDomains",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The domains of the publisher.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/relationtypes": {
      "get": {
        "tags": [
          "mappings"
        ],
        "summary": "Retrieve all available types of mappings",
        "description": "Every class and every property in BIMeta can be mapped to other classes and properties. Every mapping is qualified by a mapping type. The available mapping types can be retrieved in this ressource.",
        "operationId": "GetRelationTypes",
        "responses": {
          "200": {
            "description": "The types of mappings are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/unitcodes": {
      "get": {
        "tags": [
          "measures and units"
        ],
        "summary": "Retrieve all available measure types and their units as a list",
        "description": "Every property definition has a measures type, that defines the data, that ca be story in the property. BIMeta uses at minimum the measure types, defined by EN ISO 16739. Every measure type can have many unit types. The unit types follwow the prEN 16749-1. Those measure types and unit type, that are not included in the named standard, are added directly in BIMeta.",
        "operationId": "GetUnitCodes",
        "responses": {
          "200": {
            "description": "The property types are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.TypesUnitCode"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.TypesUnitCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.TypesUnitCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/users/{identification}/rights": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "Retrieve the list of users, that are registered in BIMeta.",
        "description": "Every change in BIMeta is tracked, according to EN ISO 23386. Therefore any change in BIMeta is done by an explicit, know person, that represents one or many organizations. This ressource retrievs a list of those users.",
        "operationId": "GetUserRights",
        "parameters": [
          {
            "name": "identification",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The userliste is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.UserRight"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.UserRight"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.UserRight"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/users/{identification}": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "Retrieve the user, that is registered in BIMeta.",
        "description": "Every change in BIMeta is tracked, according to EN ISO 23386. Therefore any change in BIMeta is done by an explicit, know person, that represents one or many organizations. This ressource retrievs a list of those users.",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "identification",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Insert or update a user definition (Upsert)",
        "description": "This ressource receives a user object. If the user already exists, the user is updated, otherwise the (new) user is inserted into BIMeta.",
        "operationId": "UpsertUser",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user data is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/versionstatus/versions/statuses": {
      "get": {
        "tags": [
          "versionstatus"
        ],
        "summary": "Retrieve all versions statuses",
        "description": "",
        "operationId": "GetAllStatuses",
        "responses": {
          "200": {
            "description": "The list of version status is availabe.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/versionstatus/versionstatus/{vsId}": {
      "get": {
        "tags": [
          "versionstatus"
        ],
        "summary": "Get one single version status by its Id (vsId)",
        "description": "",
        "operationId": "GetVersionStatus",
        "parameters": [
          {
            "name": "vsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The version status data is available.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/versionstatus": {
      "post": {
        "tags": [
          "versionstatus"
        ],
        "summary": "Insert or update a VersionStatus (Upsert)",
        "description": "This ressource receives a VersionStatus object. If the VersionStatus already exists, the VersionStatus is updated, otherwise the (new) VersionStatus is inserted into BIMeta.",
        "operationId": "UpsertVersionStatus",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                ],
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The versionStatus data is upserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/versionstatus/insertdefaultversionstatues": {
      "post": {
        "tags": [
          "versionstatus"
        ],
        "summary": "Inserting default versionStatus",
        "description": "Inserting a default version status",
        "operationId": "InsertDefaultVersionStatusDataIntoDB",
        "responses": {
          "200": {
            "description": "The defaultversionstatus data is inserted.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v0.1/workflowstatuses": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "Retrievs the workflow status and the workflow itself.",
        "description": "Every change in BIMeta is processed by a prdefined workflow according to EN ISO 23386 to ensure the tracebility of the meta data. This ressource provides the list of the available workflow status and the workflow definition.",
        "operationId": "GetWorkflowStatuses",
        "responses": {
          "200": {
            "description": "The WorkflowStatuses are available.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Bimeta.Server.Core.Database.Audit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "objectValue": {
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Api.Server.Authorization.Credential": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Api.Server.Model.AuthToken": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "expiresInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.BadRequestResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.ClassificationSystemType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "classificationSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Edition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "editionsnummer": {
            "type": "string",
            "nullable": true
          },
          "editionsname": {
            "type": "string",
            "nullable": true
          },
          "sprache": {
            "type": "string",
            "nullable": true
          },
          "logofile": {
            "type": "string",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "editions2Profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Editions2Profile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Editions2Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "edition": {
            "type": "string",
            "format": "uuid"
          },
          "profile": {
            "type": "string",
            "format": "uuid"
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "zzEditionInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzProfilInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "editionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Edition"
              }
            ],
            "nullable": true
          },
          "profileNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.PropertyEnumerationValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "enumeration": {
            "type": "string",
            "format": "uuid"
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "definitionDe": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "definitionEn": {
            "type": "string",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzMerkmal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "integerIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enumerationNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.PropertyEnumeration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "definitionDe": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "definitionEn": {
            "type": "string",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "property": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "classificationSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "propertyNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          },
          "classes2Properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "propertyEnumerationValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumerationValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.CommentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Comment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "commentType": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "commentTypeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.CommentType"
              }
            ],
            "nullable": true
          },
          "userNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Tracking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "payload": {
            "type": "string",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "userNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Publisher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "uriDictionary": {
            "type": "string",
            "nullable": true
          },
          "uriApi": {
            "type": "string",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Group"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "publisher": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "canRead": {
            "type": "boolean"
          },
          "canWrite": {
            "type": "boolean"
          },
          "canApprove": {
            "type": "boolean"
          },
          "canLink": {
            "type": "boolean"
          },
          "canPublish": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classificationSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          },
          "publisherNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
              }
            ],
            "nullable": true
          },
          "users2Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Users2Group"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Users2Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "group": {
            "type": "string",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "groupNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Group"
              }
            ],
            "nullable": true
          },
          "userNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "surName": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "accountIsLocked": {
            "type": "boolean"
          },
          "passwordSalt": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "oauthId": {
            "type": "string",
            "nullable": true
          },
          "lastLoginTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLoginSuccessfull": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "privacyPolicy": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Comment"
            },
            "nullable": true
          },
          "trackings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Tracking"
            },
            "nullable": true
          },
          "users2Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Users2Group"
            },
            "nullable": true
          },
          "versionStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
            },
            "nullable": true
          },
          "classificationSystemVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.VersionStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeFromNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
              }
            ],
            "nullable": true
          },
          "classificationSystemVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.ClassificationSystemVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid"
          },
          "versionStatus": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "bsDDVersion": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "classificationSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "versionStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.VersionStatus"
              }
            ],
            "nullable": true
          },
          "classCreatedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classPublishedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classDiscontinuedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classDeletedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classes2PropertyCreatedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "classes2PropertyPublishedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "classes2PropertyDiscontinuedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "classes2PropertyDeletedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "propertyCreatedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "propertyPublishedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "propertyDiscontinuedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "propertyDeletedVersionNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "lastChangeFromNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.User"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.WorkflowMatrix": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "workflowStatus": {
            "type": "string",
            "format": "uuid"
          },
          "workflowFollowStatus": {
            "type": "string",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "workflowFollowStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
              }
            ],
            "nullable": true
          },
          "workflowStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.WorkflowStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "isStartStep": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classes2Properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "workflowMatrixWorkflowFollowStatusNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowMatrix"
            },
            "nullable": true
          },
          "workflowMatrixWorkflowStatusNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowMatrix"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Classes2Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "class": {
            "type": "string",
            "format": "uuid"
          },
          "property": {
            "type": "string",
            "format": "uuid"
          },
          "enumeration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "usageDefinition": {
            "type": "string",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "zzBauteiltyp": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzMerkmal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "publishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unpublishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionCreated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionPublished": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionDiscontinued": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionDeleted": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "workflowStatus": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dateOfCreation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfActivation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfLastChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfRevision": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfVersion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfDeactivation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deprecationExplanation": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inheritsProperty": {
            "type": "boolean",
            "nullable": true
          },
          "classNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          },
          "enumerationNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
              }
            ],
            "nullable": true
          },
          "propertyNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          },
          "publishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
              }
            ],
            "nullable": true
          },
          "versionCreatedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionPublishedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionDiscontinuedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionDeletedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "replacedByNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
              }
            ],
            "nullable": true
          },
          "replacesNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
              }
            ],
            "nullable": true
          },
          "unpublishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
              }
            ],
            "nullable": true
          },
          "workflowStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
              }
            ],
            "nullable": true
          },
          "inverseReplacedByNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "inverseReplacesNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.DomainVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          },
          "classPublishedWithVersionNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classUnpublishedWithVersionNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "classes2PropertyPublishedWithVersionNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "classes2PropertyUnpublishedWithVersionNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "propertyPublishedWithVersionNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "propertyUnpublishedWithVersionNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.TypesUnitCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "siOffset": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "siConversionFactor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "nullable": true
          },
          "laTexNotation": {
            "type": "string",
            "nullable": true
          },
          "asciiMathNotation": {
            "type": "string",
            "nullable": true
          },
          "javascriptFormula": {
            "type": "string",
            "nullable": true
          },
          "dimension": {
            "type": "string",
            "nullable": true
          },
          "ifcUnittype": {
            "type": "string",
            "nullable": true
          },
          "ifcUnitPrefix": {
            "type": "string",
            "nullable": true
          },
          "ifcUnitName": {
            "type": "string",
            "nullable": true
          },
          "ifcNotation": {
            "type": "string",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "externalDefinitionDe": {
            "type": "string",
            "nullable": true
          },
          "externalDefinitionEn": {
            "type": "string",
            "nullable": true
          },
          "typeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
              }
            ],
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.IfcType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "baseType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "definitionEn": {
            "type": "string",
            "nullable": true
          },
          "definitionDe": {
            "type": "string",
            "nullable": true
          },
          "templateType": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "externalDefinitionDe": {
            "type": "string",
            "nullable": true
          },
          "externalDefinitionEn": {
            "type": "string",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzBaseTypeInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseTypeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
              }
            ],
            "nullable": true
          },
          "inverseBaseTypeNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "typesUnitCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.TypesUnitCode"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.PropertySet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfRevision": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfVersion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "revision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deprecationExplanation": {
            "type": "string",
            "nullable": true
          },
          "creatorsLanguage": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "countryOfUse": {
            "type": "string",
            "nullable": true
          },
          "property2Psets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property2Pset"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Property2Pset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "propertySet": {
            "type": "string",
            "format": "uuid"
          },
          "property": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "propertyNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          },
          "propertySetNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertySet"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.RelationClass": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "classificationsSystem": {
            "type": "string",
            "format": "uuid"
          },
          "relationType": {
            "type": "string",
            "format": "uuid"
          },
          "startClass": {
            "type": "string",
            "format": "uuid"
          },
          "endClass": {
            "type": "string",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "migrationDescription": {
            "type": "string",
            "nullable": true
          },
          "classificationsSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          },
          "endClassNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          },
          "relationTypeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationType"
              }
            ],
            "nullable": true
          },
          "startClassNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.RelationType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "relationClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
            },
            "nullable": true
          },
          "relationProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.RelationProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "classificationsSystem": {
            "type": "string",
            "format": "uuid"
          },
          "relationType": {
            "type": "string",
            "format": "uuid"
          },
          "startProperty": {
            "type": "string",
            "format": "uuid"
          },
          "endProperty": {
            "type": "string",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "migrationDescription": {
            "type": "string",
            "nullable": true
          },
          "classificationsSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          },
          "endPropertyNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          },
          "relationTypeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationType"
              }
            ],
            "nullable": true
          },
          "startPropertyNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid"
          },
          "domainSpecificIdentifier": {
            "type": "string",
            "nullable": true
          },
          "domainSpecificGroup": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "definitionEn": {
            "type": "string",
            "nullable": true
          },
          "definitionDe": {
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionDe": {
            "type": "string",
            "nullable": true
          },
          "examplesEn": {
            "type": "string",
            "nullable": true
          },
          "examplesDe": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid"
          },
          "unitCode": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "publishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unpublishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionCreated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionPublished": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionDiscontinued": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionDeleted": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "workflowStatus": {
            "type": "string",
            "format": "uuid"
          },
          "dateOfCreation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfActivation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfLastChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfRevision": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfVersion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfDeactivation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deprecationExplanation": {
            "type": "string",
            "nullable": true
          },
          "visualRepresentation": {
            "type": "string",
            "nullable": true
          },
          "countryOfUse": {
            "type": "string",
            "nullable": true
          },
          "subdivisionOfUse": {
            "type": "string",
            "nullable": true
          },
          "countryOfOrigin": {
            "type": "string",
            "nullable": true
          },
          "creatorsLanguage": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "boundaryValues": {
            "type": "string",
            "nullable": true
          },
          "referenceDocument": {
            "type": "string",
            "nullable": true
          },
          "source1": {
            "type": "string",
            "nullable": true
          },
          "source2": {
            "type": "string",
            "nullable": true
          },
          "numberOfValues": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dynamicProperty": {
            "type": "boolean"
          },
          "tolerance": {
            "type": "string",
            "nullable": true
          },
          "ifdGlobalId": {
            "type": "string",
            "nullable": true
          },
          "ifdGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "hasEnumerationValue": {
            "type": "boolean"
          },
          "classificationSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          },
          "publishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
              }
            ],
            "nullable": true
          },
          "versionCreatedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionPublishedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionDiscontinuedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionDeletedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "replacedByNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          },
          "replacesNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          },
          "typeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.IfcType"
              }
            ],
            "nullable": true
          },
          "unitCodeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.TypesUnitCode"
              }
            ],
            "nullable": true
          },
          "unpublishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
              }
            ],
            "nullable": true
          },
          "workflowStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
              }
            ],
            "nullable": true
          },
          "classes2Properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "inverseReplacedByNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "inverseReplacesNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "profiles2Properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2Property"
            },
            "nullable": true
          },
          "property2Psets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property2Pset"
            },
            "nullable": true
          },
          "propertyEnumerations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
            },
            "nullable": true
          },
          "relationPropertyEndPropertyNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
            },
            "nullable": true
          },
          "relationPropertyStartPropertyNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Profiles2Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "profileClass": {
            "type": "string",
            "format": "uuid"
          },
          "property": {
            "type": "string",
            "format": "uuid"
          },
          "available": {
            "type": "boolean"
          },
          "mandatory": {
            "type": "boolean"
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "zzMerkmal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzProfilBauteil": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "profileClassNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2Class"
              }
            ],
            "nullable": true
          },
          "propertyNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Profiles2Class": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "profile": {
            "type": "string",
            "format": "uuid"
          },
          "class": {
            "type": "string",
            "format": "uuid"
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "zzBimProfil": {
            "type": "integer",
            "format": "int32"
          },
          "zzBauteiltyp": {
            "type": "integer",
            "format": "int32"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          },
          "profileNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
              }
            ],
            "nullable": true
          },
          "profiles2Properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2Property"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Profiles2ClassificationSystem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "profile": {
            "type": "string",
            "format": "uuid"
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid"
          },
          "zzId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzProfilInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzKlassifikationInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classificationSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "profileNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "format": "uuid"
          },
          "areaOfApplication": {
            "type": "string",
            "nullable": true
          },
          "license": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "publishingDate": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "profilTeam": {
            "type": "string",
            "nullable": true
          },
          "servId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bauteiltyp": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lifeCyclePhase": {
            "type": "string",
            "nullable": true
          },
          "isAia": {
            "type": "boolean"
          },
          "sortierungAnzeige": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sprache": {
            "type": "string",
            "nullable": true
          },
          "herausgeber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "idXml": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "zzBeschreibung": {
            "type": "string",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzFreigabestatus": {
            "type": "string",
            "nullable": true
          },
          "zzAnwendungsgebiet": {
            "type": "string",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "languageNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Language"
              }
            ],
            "nullable": true
          },
          "editions2Profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Editions2Profile"
            },
            "nullable": true
          },
          "profiles2Classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2Class"
            },
            "nullable": true
          },
          "profiles2ClassificationSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2ClassificationSystem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Language": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "language1": {
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classificationSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
            },
            "nullable": true
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
            },
            "nullable": true
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Domain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "publisher": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "uriDictionary": {
            "type": "string",
            "nullable": true
          },
          "uriApi": {
            "type": "string",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "showDomainSpecificIdentifier": {
            "type": "boolean"
          },
          "showDomainSpecificGroup": {
            "type": "boolean"
          },
          "creatorsLanguage": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "creatorsLanguageNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Language"
              }
            ],
            "nullable": true
          },
          "publisherNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Publisher"
              }
            ],
            "nullable": true
          },
          "classificationSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
            },
            "nullable": true
          },
          "domainVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Group"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "relationClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
            },
            "nullable": true
          },
          "relationProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.ClassificationSystem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "publicationDate": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "classificationSystemType": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displaySort": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "format": "uuid"
          },
          "beispielCode": {
            "type": "string",
            "nullable": true
          },
          "beispielName": {
            "type": "string",
            "nullable": true
          },
          "applicationArea": {
            "type": "string",
            "nullable": true
          },
          "license": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "baseClassificationSystem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "baseClassificationSystemVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "zzLanguageText": {
            "type": "string",
            "nullable": true
          },
          "zzRedaktionsmodell": {
            "type": "string",
            "nullable": true
          },
          "zzPrice": {
            "type": "string",
            "nullable": true
          },
          "zzHerstellerdaten": {
            "type": "string",
            "nullable": true
          },
          "zzVerfügbarkeit": {
            "type": "string",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "format": "date-time"
          },
          "zzNutzungsgebühren": {
            "type": "string",
            "nullable": true
          },
          "zzDetaillierungsgrad": {
            "type": "string",
            "nullable": true
          },
          "zzBauteileigenschaften": {
            "type": "string",
            "nullable": true
          },
          "zzDokumententransport": {
            "type": "string",
            "nullable": true
          },
          "zzCompatibleToIfc": {
            "type": "string",
            "nullable": true
          },
          "zzCompatibleToDin276": {
            "type": "string",
            "nullable": true
          },
          "zzDatentabelle": {
            "type": "string",
            "nullable": true
          },
          "zzKlassifikationstyp": {
            "type": "string",
            "nullable": true
          },
          "zzIdInt": {
            "type": "integer",
            "format": "int32"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classificationSystemTypeNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemType"
              }
            ],
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          },
          "languageNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Language"
              }
            ],
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Group"
            },
            "nullable": true
          },
          "profiles2ClassificationSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2ClassificationSystem"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Property"
            },
            "nullable": true
          },
          "propertyEnumerations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.PropertyEnumeration"
            },
            "nullable": true
          },
          "relationClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
            },
            "nullable": true
          },
          "relationProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationProperty"
            },
            "nullable": true
          },
          "classificationSystemVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Class": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid"
          },
          "parentClass": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "definitionEn": {
            "type": "string",
            "nullable": true
          },
          "definitionDe": {
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionDe": {
            "type": "string",
            "nullable": true
          },
          "examplesEn": {
            "type": "string",
            "nullable": true
          },
          "examplesDe": {
            "type": "string",
            "nullable": true
          },
          "synonymsEn": {
            "type": "string",
            "nullable": true
          },
          "synonymsDe": {
            "type": "string",
            "nullable": true
          },
          "source1": {
            "type": "string",
            "nullable": true
          },
          "source2": {
            "type": "string",
            "nullable": true
          },
          "examples": {
            "type": "string",
            "nullable": true
          },
          "publishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unpublishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionCreated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionPublished": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionDiscontinued": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionDeleted": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "workflowStatus": {
            "type": "string",
            "format": "uuid"
          },
          "system": {
            "type": "boolean"
          },
          "lastChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfCreation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfActivation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfLastChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfRevision": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfVersion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfDeactivation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deprecationExplanation": {
            "type": "string",
            "nullable": true
          },
          "visualRepresentation": {
            "type": "string",
            "nullable": true
          },
          "countryOfUse": {
            "type": "string",
            "nullable": true
          },
          "subdivisionOfUse": {
            "type": "string",
            "nullable": true
          },
          "countryOfOrigin": {
            "type": "string",
            "nullable": true
          },
          "creatorsLanguage": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "referenceDocument": {
            "type": "string",
            "nullable": true
          },
          "ifdGlobalId": {
            "type": "string",
            "nullable": true
          },
          "ifdGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "zzParentClassInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzOmniclass": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzUniclass": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzUniclassTemporarily": {
            "type": "string",
            "nullable": true
          },
          "zzGuidPset": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "zzDin276": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zzIfc": {
            "type": "string",
            "nullable": true
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "classificationSystemNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystem"
              }
            ],
            "nullable": true
          },
          "parentClassNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          },
          "publishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
              }
            ],
            "nullable": true
          },
          "versionCreatedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionPublishedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionDiscontinuedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "versionDeletedNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "replacedByNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          },
          "replacesNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
              }
            ],
            "nullable": true
          },
          "unpublishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersion"
              }
            ],
            "nullable": true
          },
          "workflowStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatus"
              }
            ],
            "nullable": true
          },
          "classes2Properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Classes2Property"
            },
            "nullable": true
          },
          "inverseParentClassNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "inverseReplacedByNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "inverseReplacesNavigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Class"
            },
            "nullable": true
          },
          "profiles2Classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Profiles2Class"
            },
            "nullable": true
          },
          "relationClassEndClassNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
            },
            "nullable": true
          },
          "relationClassStartClassNavigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bimeta.Server.Core.Database.RelationClass"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.WorkflowStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.DomainVersionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "domain": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastChangeFrom": {
            "type": "string",
            "nullable": true
          },
          "domainNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.Domain"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.Dto.PropertyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "classificationSystem": {
            "type": "string",
            "format": "uuid"
          },
          "nameDe": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "publishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unpublishedWithVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "workflowStatus": {
            "type": "string",
            "format": "uuid"
          },
          "versionCreated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionPublished": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "hasEnumerationValue": {
            "type": "boolean"
          },
          "workflowStatusNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.WorkflowStatusDto"
              }
            ],
            "nullable": true
          },
          "classificationSystemCreatedVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "classificationSystemPublishedVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.ClassificationSystemVersion"
              }
            ],
            "nullable": true
          },
          "publishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersionDto"
              }
            ],
            "nullable": true
          },
          "unpublishedWithVersionNavigation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bimeta.Server.Core.Database.DomainVersionDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bimeta.Server.Core.Database.UserRight": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "surName": {
            "type": "string",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "oauthId": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "format": "uuid"
          },
          "publisher": {
            "type": "string",
            "nullable": true
          },
          "domainId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "classificationSystemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "classificationSystem": {
            "type": "string",
            "nullable": true
          },
          "canRead": {
            "type": "boolean"
          },
          "canWrite": {
            "type": "boolean"
          },
          "canApprove": {
            "type": "boolean"
          },
          "canLink": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}